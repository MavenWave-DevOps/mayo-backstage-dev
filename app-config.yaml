app:
  title: Mirage Backstage
  baseUrl: http://localhost:3000 #https://mirage.px-dev.mavenwave.dev
  support:
    url: https://github.com/backstage/backstage/issues
    items:
      - title: Backstage Community
        icon: chat
        links:
          - url: https://backstage.io/docs/overview/support
            title: Support and community
      - title: Backstage News
        icon: docs
        links:
          - url: https://backstage.io/blog/
            title: Backstage Blog

  organization:
    name: Maven Wave

permission:
  enabled: true

backend:
  auth:
    keys:
      - secret: ${BACKEND_SECRET}  # run this command to get BACKEND_SECRET ->  node -p 'require("crypto").randomBytes(24).toString("base64")'

  apiUrl: http://localhost:7007 # "http://mirage.px-dev.mavenwave.dev/run"

  baseUrl: http://localhost:7007 # http://mirage.px-dev.mavenwave.dev
  listen:
    port: 7007
  csp:
    connect-src: ["'self'", "http:", "https:"]
  cors:
    origin: http://localhost:7007
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true
  
  database:
    # client: better-sqlite3
    # connection: ":memory:"
    client: pg
    connection:
      host: ${POSTGRES_SERVICE_HOST}
      port: ${POSTGRES_SERVICE_PORT}
      user: ${POSTGRES_USER}
      password: ${POSTGRES_PASSWORD}
     # database: database #${POSTGRES_DATABASE}
    #   restart: unless-stopped
    # ensureExists: true

    # plugin:
    #   catalog:
    #     connection:
    #       database: database #${POSTGRES_DATABASE}
    #   auth:
    #     connection:
    #       database: database #${POSTGRES_DATABASE}
    #   app:
    #     connection:
    #       database: database #${POSTGRES_DATABASE}
    #   scaffolder:
    #     connection:
    #       database: database #${POSTGRES_DATABASE}

  cache:
    store: memory
  
  reading:
    allow:
      - host: dev.azure.com

integrations:
  azure:
    - host: dev.azure.com
      token: ${AZURE_TOKEN}

proxy:
  "/argocd/api":
    target: https://argocd.px-dev.mavenwave.dev/api/v1/
    changeOrigin: true
    secure: false
    headers:
      Cookie:
        $env: ARGOCD_AUTH_TOKEN
  "/grafana/api":
    target: https://monitoring.px-dev.mavenwave.dev/
    headers:
      Authorization: Bearer ${GRAFANA_TOKEN}

grafana:
  domain: https://monitoring.px-dev.mavenwave.dev/
  unifiedAlerting: true

auth:
  environment: development
  providers:
    microsoft:
      development:
        clientId: &clientId ${AUTH_MICROSOFT_CLIENT_ID}
        clientSecret: &clientSecret ${AUTH_MICROSOFT_CLIENT_SECRET}
        tenantId: &tenantId ${AUTH_MICROSOFT_TENANT_ID}

scaffold:

catalog:
  providers:
    microsoftGraphOrg:
      default:
          tenantId: *tenantId
          clientId: *clientId
          clientSecret: *clientSecret

  rules:
    - allow: [Group, User, Plugin, Template, Component, System, API, Resource, Location]

  locations:
    - type: url
      target: https://dev.azure.com/foster-devops/mayo-backstage/_git/backstage_catalog?path=/catalogCollection/fetch.yaml
    
    - type: url
      target: https://github.com/MavenWave-DevOps/mayo-backstage-dev/blob/main/catalog-info.yaml

    - type: url
      target: https://dev.azure.com/foster-devops/mayo-backstage/_git/ex-template-a?path=/template.yaml
      rules:
        - allow: [Template]

    - type: url
      target: https://dev.azure.com/foster-devops/mayo-backstage/_git/ex-template-C?path=/template.yaml
      rules: 
        - allow: [Template]
        
    - type: url
      target: https://dev.azure.com/foster-devops/mayo-backstage/_git/ex-template-B?path=/template.yaml
      rules: 
        - allow: [Template]
        
    - type: url
      target: https://dev.azure.com/foster-devops/mayo-backstage/_git/ex-template-D?path=/template.yaml
      rules: 
        - allow: [Template]
    - type: url
      target: https://dev.azure.com/foster-devops/mayo-backstage/_git/ex_template_E?path=/template.yaml
      rules: 
        - allow: [Template]          

costInsights:
  engineerCost: 200000
  products:
    computeEngine:
      name: Compute Engine
      icon: compute
    cloudStorage:
      name: Cloud Storage
      icon: storage
    bigQuery:
      name: BigQuery
      icon: search
  metrics:
    DAU:
      name: Daily Active Users
      default: true
    MSC:
      name: Monthly Subscribers

techdocs:
  builder: "external"
  generator:
    runIn: "local" # alternatives - 'docker'
  publisher:
    type: "local"

# kubernetes:
#   serviceLocatorMethod:
#     type: multiTenant
#   clusterLocatorMethods:
#     - type: config
#       clusters:
#         - url:  ${K8S_URL}
#           name: ${K8S_CLUSTER_NAME}
#           authProvider: serviceAccount
#           skipTLSVerify: true
#           skipMetricsLookup: true
#           serviceAccountToken: ${K8S_SA_TOKEN}

azureDevOps:
    host: dev.azure.com
    token: ${AZURE_TOKEN}
    organization: foster-devops
