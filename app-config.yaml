app:
  title: Scaffolded Backstage App
  baseUrl: http://localhost:3000

organization:
  name: Tidal Wave

backend:
  # Used for enabling authentication, secret is shared by all backend plugins
  # See https://backstage.io/docs/tutorials/backend-to-backend-auth for
  # information on the format
  # auth:
  #   keys:
  #     - secret: ${BACKEND_SECRET}
  baseUrl: http://localhost:7007
  listen:
    port: 7007
    # Uncomment the following host directive to bind to all IPv4 interfaces and
    # not just the baseUrl hostname.
    # host: 0.0.0.0
  csp:
    connect-src: ["'self'", 'http:', 'https:']
    # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
    # Default Helmet Content-Security-Policy values can be removed by setting the key to false
  cors:
    origin: http://localhost:3000
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true
  # This is for local development only, it is not recommended to use this in production
  # The production database configuration is stored in app-config.production.yaml
  database:
    # client: pg
    # pluginDivisionMode: schema
    # searchPath: database_schema
    connection:
      host: localhost #${POSTGRES_HOST}
      port: 5432
      user: postgres # ${POSTGRES_USER}
      password: secret # ${POSTGRES_PASSWORD}
    # database: postgres
    # ensureExists: false
    # knexConfig:
    #   pool:
    #     min: 2
    #     max: 10
    #     acquireTimeoutMillis: 60000
    #     idleTimeoutMillis: 60000
    #   acquireConnectionTimeout: 10000
    # plugin: 
    #   catalog:
    #     connection:
    #       database: postgres
      # auth:
      #   connection:
      #     database: postgres
        # client: better-sqlite3
        # connection: ':memory:'
      # app:
      #   connection:
      #     database: postgres
    # client: better-sqlite3
    # connection: ':memory:'

  cache:
    store: memory
      
  # workingdirectory: /tmp # use this to configure a working directory for the scaffolder, defaults to the os temp-dir

integrations:
  github:
    - host: github.com
      # this is a personal access token or pat from github. you can find out how to generate this token, and more information
      # about setting up the github integration here: https://backstage.io/docs/getting-started/configuration#setting-up-a-github-integration
      token: ${github_token}
    ### example for how to add your github enterprise instance using the api:
    # - host: ghe.example.net
    #   apibaseurl: https://ghe.example.net/api/v3
    #   token: ${ghe_token}

proxy:
  '/test':
    target: 'https://example.com'
    changeorigin: true
  '/argocd/api':
    target: https://localhost:8083/api/v1/
    changeorigin: true
    # only if your argocd api has self-signed cert
    secure: false
    headers:
      cookie:
        $env: argocd_auth_token
# reference documentation http://backstage.io/docs/features/techdocs/configuration
# note: after experimenting with basic setup, use ci/cd to generate docs
# and an external cloud storage when deploying techdocs for production use-case.
# https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach
techdocs:
  builder: 'local' # alternatives - 'external'
  generator:
    runin: 'docker' # alternatives - 'local'
  publisher:
    type: 'local' # alternatives - 'googlegcs' or 'awss3'. read documentation for using alternatives.

auth:
  # see https://backstage.io/docs/auth/ to learn about auth providers
  providers: {}

scaffolder:
  # see https://backstage.io/docs/features/software-templates/configuration for software template options

catalog:
  import:
    entityfilename: catalog-info.yaml
    pullrequestbranchname: backstage-integration
  rules:
    - allow: [component, system, api, resource, location]
  locations:
    # local example data, file locations are relative to the backend process, typically `packages/backend`
    - type: file
      target: ../../examples/entities.yaml

    # local example template
    - type: file
      target: ../../examples/template/template.yaml
      rules:
        - allow: [template]

    # local example organizational data
    - type: file
      target: ../../examples/org.yaml
      rules:
        - allow: [user, group]
    - type: url
      target: https://github.com/tony-mw/plugin-argocd-autopilot/blob/main/template.yaml
      rules:
        - allow: [ template ]

    ## uncomment these lines to add more example data
    # - type: url
    #   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all.yaml

    ## uncomment these lines to add an example org
    # - type: url
    #   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/acme-corp.yaml
    #   rules:
    #     - allow: [user, group]
