app:
  title: Mirage Backstage
  baseUrl: http://localhost:3000 #https://mirage.px-dev.mavenwave.dev
  support:
    url: https://github.com/backstage/backstage/issues
    items:
      - title: Backstage Community
        icon: chat
        links:
          - url: https://backstage.io/docs/overview/support
            title: Support and community
      - title: Backstage News
        icon: docs
        links:
          - url: https://backstage.io/blog/
            title: Backstage Blog

organization:
  name: Maven Wave

backend:
  # auth:
  #   keys:
  #     - secret: ${BACKEND_SECRET}

  apiUrl: http://localhost:7007 # "http://mirage.px-dev.mavenwave.dev/run"

  baseUrl: http://localhost:7007 # http://mirage.px-dev.mavenwave.dev
  listen:
    port: 7007
  csp:
    connect-src: ["'self'", "http:", "https:"]
  cors:
    origin: http://localhost:3000
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true
  database:
    client: better-sqlite3
    connection: ":memory:"
    # client: pg
    # connection:
    #   host: localhost #${POSTGRES_HOST}
    #   port: 5432
    #   user: postgres # ${POSTGRES_USER}
    #   password: secret # ${POSTGRES_PASSWORD}
    # plugin:
    #   catalog:
    #     connection:
    #       database: postgres
    # app:
    #   connection:
    #     database: postgres
  
  cache:
    store: memory
  
  reading:
    allow:
      - host: dev.azure.com

integrations:
  github:
    - host: github.com
      token: ${GITHUB_TOKEN}
  
  azure:
    - host: dev.azure.com
      token: &token ${AZURE_TOKEN}

proxy:
  "/grafana/api":
    target: https://monitoring.px-dev.mavenwave.dev/
    headers:
      Authorization: Bearer ${GRAFANA_TOKEN}

grafana:
  domain: https://monitoring.px-dev.mavenwave.dev/
  unifiedAlerting: true

auth:
  environment: development
  providers:
    
    microsoft:
      development:
        clientId: &clientId ${AUTH_MICROSOFT_CLIENT_ID}
        clientSecret: &clientSecret ${AUTH_MICROSOFT_CLIENT_SECRET}
        tenantId: &tenantId ${AUTH_MICROSOFT_TENANT_ID}

scaffold:

catalog:
  processors:
    microsoftGraphOrg:
      providers:
        # - target: https://graph.microsoft.com/v1.0
        #   authority: https://login.microsoftonline.com  # choose this option to avaoid personal token based authentication 
        - tenantId: *tenantId
          clientId: *clientId
          clientSecret: *clientSecret
  rules:
    - allow: [Group, User, Plugin, Template, Component, System, API, Resource, Location]
  locations:
    - type: url
      target: https://dev.azure.com/santoshhkumarr/_git/REASSERT?path=/ado-templates/template.yaml
      rules:
        - allow: [Template]

costInsights:
  engineerCost: 200000
  products:
    computeEngine:
      name: Compute Engine
      icon: compute
    cloudStorage:
      name: Cloud Storage
      icon: storage
    bigQuery:
      name: BigQuery
      icon: search
  metrics:
    DAU:
      name: Daily Active Users
      default: true
    MSC:
      name: Monthly Subscribers

techdocs:
  builder: "external"
  generator:
    runIn: "local" # alternatives - 'docker'
  publisher:
    type: "local"

# This is for k8s cluster management
# Currently, just using a minikube cluster
# TODO: Install backstage in GKE then point to GKE cluster

kubernetes:
  serviceLocatorMethod:
    type: "multiTenant"
  clusterLocationMethdos:
    - type: "config"
      clusters:
        - url: http://127.0.0.1:9999 # found by running `kubectl cluster-info`
          name: minikube # unique within backstage project
          authProvider: "serviceAccount" # uses a k8s sa, can use google sa
          skipTLSVerify: false # k8s client verifies the TLS certificate presented by the API
          skipMetricsLookup: true
          # serviceAccountToken: ${K8S_MINIKUBE_TOKEN} # kubectl get secret
          # dashboardUrl: http://127.0.0.1:64713
          # dashboardApp: standard
          # caData: ${K8S_CONFIG_CA_DATA}
          caFile: "~/.minikube/ca.pem"
          # customResources:
          #   - group: 'argoproj.io'
          #     apiVersion: 'v1alpha1'
          #     plural: 'rollouts'

azureDevOps:
    host: dev.azure.com
    token: *token
    organization: foster-devops
